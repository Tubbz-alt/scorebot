.howto
  :markdown
    # How to Play

    Hack services, retrieve tokens. Redeem tokens, get flags. Don't fail
    availability checks.

    Have fun!

    Token redemption is done via a signed HTTPS POST request to
    "#{redemption_url}" . You can submit as many tokens
    per request as you want.

        curl \
          -F "tokens[]=TOKEN_GOES_HERE" \
          -F "tokens[]=ANOTHER_TOKEN_GOES_HERE" \
          -F "tokens[]=RocyGt0kXt8z0dVM2nKqQUc4qb" \
          -F "tokens[]=gYAMrepyqzITctw5sVOxAqXWfH" \
          -E #{current_team.certname}.crt \
          --key #{current_team.certname}.key \
          #{redemption_url}

    *Mac users:* please see the bottom of the page if the above command
    doesn't work.

    The response body is a JSON hash of how each token was processed. The key
    is the token you submitted, and the value is how it was processed:

        {
          "RocyGt0kXt8z0dVM2nKqQUc4qb": "442f3a75-fd29-4f58-a22a-30032c47bf9b",
          "gYAMrepyqzITctw5sVOxAqXWfH": "error: Token doesn't exist",
          "55Lw0715kKspPThe0TameKPYel": "error: Already redeemed that token",
          "goIbfzcFaUN0gr4luo2C7DcLhQ": "error: Token too old",
          "RJohZ3XESG3oOhRUGGQjgUIeN1": "error: Can't redeem your own tokens",
          "6ABiZBfN4vURgUGakmjnsnpT9r":
            "error: some other error 79f21e3d-fcef-4327-8d50-dbe78ca8f147"
        }

    Here's what the messages mean:

        "RocyGt0kXt8z0dVM2nKqQUc4qb": "442f3a75-fd29-4f58-a22a-30032c47bf9b"

    The token was redeemed successfully. The uuid given can be looked up in
    the "redemptions" table after the game.

        "gYAMrepyqzITctw5sVOxAqXWfH": "error: Token doesn't exist"

    The scoring system can't find that token. Sorry!

        "55Lw0715kKspPThe0TameKPYel": "error: Already redeemed that token"

    Your team has already redeemed that token. You don't need to submit it
    again.

         "goIbfzcFaUN0gr4luo2C7DcLhQ": "error: Token too old"

    This token has expired. Go faster next time.

         "RJohZ3XESG3oOhRUGGQjgUIeN1": "error: Can't redeem your own tokens"

    You can't score on yourself.

         "6ABiZBfN4vURgUGakmjnsnpT9r":
            "error: some other error 79f21e3d-fcef-4327-8d50-dbe78ca8f147"

    Please write down the uuid and the token, and bring it to us! This is our
    fault, not yours.

    ## Mac Issues

    El Capitan has changed the way `curl` works. It prefers to use keys and
    certificates from the built-in Keychain system, instead of files.
    Additionally, it will only work with PKCS#12 key & cert bundles, and not
    PEM-encoded files.

    To force it to use files, make them obviously file paths and not simply a
    filename. To use the .P12 file, pass in a path to the `-E` certificate
    argument, and postfix the password after a `:` colon as below. The bundles
    we distribute have the password "`asdfasdf`" (without quotes,) again as
    shown below.

        curl \
          -F "tokens[]=TOKEN_GOES_HERE" \
          -F "tokens[]=ANOTHER_TOKEN_GOES_HERE" \
          -F "tokens[]=RocyGt0kXt8z0dVM2nKqQUc4qb" \
          -F "tokens[]=gYAMrepyqzITctw5sVOxAqXWfH" \
          -E ./#{current_team.certname}.P12:asdfasdf \
          #{redemption_url}
