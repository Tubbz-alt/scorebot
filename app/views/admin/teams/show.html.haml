%h1 Team: #{@team.name}

%table
  %tr
    %th name
    %td= @team.name
  %tr
    %th display name
    %td= @team.display
  %tr
    %th certname
    %td= @team.certname
  %tr
    %th address
    %td= @team.address
  %tr
    %th uuid
    %td= @team.uuid

%h2 flags

%table
  - @team.instances.joins(:service).sort_by{|i|i.service.name.downcase}.each do |inst|
    %tr
      %th= inst.service.name
      %td= inst.flags.count

%h2 failed redemptions

%table
  %tbody
    %tr
      %th dupe
      %td= @team.dupe_ctr
    %tr
      %th old
      %td= @team.old_ctr
    %tr
      %th notfound
      %td= @team.notfound_ctr
    %tr
      %th self
      %td= @team.self_ctr
    %tr
      %th other
      %td= @team.other_ctr

%h2 successful redemptions

%table
  %thead
    %tr
      %th id
      %th instance
      %th round
      %th token
      %th captures
  %tbody
    - @team.redemptions.order(id: :desc).limit(@round_limit * 30).each do |r|
      %tr
        %td= link_to r.id, admin_redemption_path(r.id)
        %td= link_to r.token.instance.id, admin_instance_path(r.token.instance_id)
        %td= link_to r.round_id, admin_round_path(r.round_id)
        %td= link_to r.token.to_fake_string, admin_token_path(r.token_id)
        %td= r.captures.count


%h2 service availability

%p
  Showing #{@round_limit} rounds.
  = link_to "Show all?", limit: 1_000

%table#availabilities
  %thead
    %tr
      %th round id
      - @services.each do |s|
        %th= s.name
  %tbody
    - @rounds.each do |r|
      %tr
        %th
          = r.id
          = r.created_at.to_formatted_s(:ctf)
        - @services.each do |s|
          - i = @team.instances.find_by(service: s)
          - av = i.availabilities.find_by(round: r)
          - if av.nil?
            %td
          - else
            %td{class: av.healthy?.inspect}
              = av.healthy?
