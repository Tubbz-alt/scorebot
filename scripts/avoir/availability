#!/usr/bin/env python
import sys
import signal
import argparse
import socket
import select
import string
import io
import struct
import string
import random
import time
import hashlib

def randstr( leng=6 ):
	x = ''
	for i in range(0, leng):
		x += struct.pack('B', random.randint( 0x41, 0x5b ))
	return x

def login( s ):
	users = [ [ 'billy\n', 'pilgrim\n'], [ 'kilgore\n', 'trout\n'], [ 'littlenewt\n', 'ice\n'], [ 'blackbeard\n', 'pirate\n'] ]

	x = random.randint( 0, len(users)-1)
	print x
	y = s.recv(1024)
	if y.startswith('\nuser:') != True:
		print "user failed %s" % y
		return -1

	s.send( users[x][0] )
	y = s.recv(1024)
	if y.startswith('pass:') != True:
		return -1

	s.send(users[x][1])
	y = s.recv( 1024 )
	if y.startswith('login failed') == True:
		return -1
	return 0

def createdirls( s ):
	x = randstr( random.randint(0x10, 0x30) )
	s.send('md ' + x + '\n')
	s.recv(1024)
	s.send( 'ls .\n') 
	y = s.recv(1024)
	s.recv(1024)
	if y.find(x) == -1:
		print "createdirls failed"
		return -1
	return 0

def mkdirlsrmdir( s ):
	x = randstr( random.randint(0x10,0x30) )
	s.send('md ' + x + '\n')
	s.recv(1024)
	s.send( 'ls .\n') 
	y = s.recv(1024)
	s.recv(1024)
	if y.find(x) == -1:
		print y
		print x
		print 'mkdirlsrmdir failed'
		return -1
	s.send('rd ' + x + '\n')
	s.recv(1024)
	#print 'mkdirlsrmdir success'
	return 0

def touchls( s ):
	x = randstr( random.randint(0x10,0x30) )
	s.send('th ' + x + '\n')
	s.recv(1024)
	s.send( 'ls .\n') 
	y = s.recv(1024)
	s.recv(1024)
	if y.find(x) == -1:
		print 'touchls failed'
		return -1
	#print 'touchls success'
	return 0

def echocat( s ):
	x = randstr( random.randint( 0x10, 0xf0) )
	y = randstr( random.randint(0x10, 0x30) )
	blah = 'ec ' + x + ' >> ' + y + '\n'
	s.send(blah)
	s.recv(1024)
	s.send('ct ' + y + '\n')
	z = s.recv(1024)
	s.recv(1024)
	if z != x:
		print z
		print x
		print 'echo cat failed'
		return -1

	return 0

def addusersu( s ):
	x = randstr()	
	s.send( 'au ' + x + '\n')
	s.recv(1024)
	passd = randstr()
	s.send( passd + '\n')
	s.recv(1024)
	s.send( passd + '\n')
	s.recv(1024)
	s.send('su ' + x + '\n')
	s.recv(1024)
	s.send(passd + '\n')
	s.recv(1024)
	s.send('wh\n')
	y = s.recv(1024)
	s.recv(1024)
	if y.startswith(x) == False:
		print y
		print 'wh adduser failed'
		return -1
	s.send( 'cd \n')
	s.recv(1024)
	s.send( 'pd\n')
	y = s.recv(1024)
	z = '/home/' + x
	if y.startswith(z) == False:
		print y
		print 'pd adduser failed'
		return -1	
	#print 'addusersu success'
	s.recv(1024)
	return 0

def runcmd( s ):
	y = random.randint(10, 20)

	retval = 0

	while retval == 0 and y > 0:
		x = random.randint( 0, 4 )
		if x == 0:
			retval = createdirls( s )
			if retval != 0:
				print 'createdirls failed'
		elif x == 1:
			retval = mkdirlsrmdir( s )
			if retval != 0:
				print 'mkdirlsrmdir failed'
		elif x == 2:
			retval = echocat( s )
			if retval != 0:
				print 'echocat failed'
		elif x == 3:
			retval = touchls( s )
			if retval != 0:
				print 'toucls failed'
		elif x == 4:
			retval = addusersu( s )
			if retval != 0:
				print 'addusersu failed'
		y -= 1
	
	sys.exit(retval)	

if __name__ == '__main__':
	signal.alarm(10)
	s = socket.socket( socket.AF_INET, socket.SOCK_STREAM)
	s.connect(( sys.argv[1], 5678 ) ) 

	print s.recv(1024)
	if login( s ) != 0:
		print 'Login failed'
		sys.exit(1)
	else:
		print 'login success'

	runcmd( s )
	
	

