#!/usr/bin/perl

use Sys::Syslog;
openlog($0, '', 'user');

#
# path to mounted lxc rootfs
#
my $LXC_PATH = "/mnt/lxc/lxclib/team/rootfs";

#
# list of services (number is group number in container)
#
my %services = (
	"bookworm" => 1001, 
	"atmail" => 1003,
	"reeses" => 1004
);

my %team_odroid_ips = (
	"ppp" 			=> "10.4.1.2",
	"technopandas" 		=> "10.4.2.2",
	"clgt" 			=> "10.4.3.2",
	"whois" 		=> "10.4.4.2",
	"pwnies" 		=> "10.4.5.2",
	"samurai" 		=> "10.4.6.2",
	"euronop" 		=> "10.4.7.2",
	"sutegoma2" 		=> "10.4.8.2",
	"moresmoked" 		=> "10.4.9.2",
	"bluelotus" 		=> "10.4.10.2",
	"routards" 		=> "10.4.11.2",
	"shellcorp" 		=> "10.4.12.2",
	"shellphish" 		=> "10.4.13.2",
	"wowhacker" 		=> "10.4.14.2",
	"team9447" 		=> "10.4.15.2",
	"meninblackhats"	=> "10.4.16.2",
	"pwningyeti" 		=> "10.4.17.2",
	"apt8" 			=> "10.4.18.2",
	"alternatives" 		=> "10.4.19.2",
	"robotmafia" 		=> "10.4.20.2",
	"oracle" 		=> "10.4.21.2",
	"team22" 		=> "10.4.22.2"
);

#
# parse the command line options and make sure we got what we needed
#
if ($#ARGV+1 != 3) {
	print "usage: deposit-token.pl <team name> <service> <new token>\n";
	exit;
}

my $team_name = $ARGV[0];
my $service = $ARGV[1];
my $new_token = $ARGV[2];

if (!exists $team_odroid_ips{$team_name}) {
	syslog('info', "Don't recognize team $team_name\n");
	exit(-1);
}
my $odroid_ip = $team_odroid_ips{$team_name};

#
# get the group ID from the services table
#
#my $group_id = $services{$service};

#
# make sure the service we were given is one we know how to handle and that it's active
#
#if (!exists $services{$service}) {
#	syslog('info', "Don't know how to handle service $service\n");
#	exit;
#}

#
# ssh to the remote system and verify the permissions and existance of current token
#
VerifyKey();

#
# ssh to the remote system and get the group ID of the target service
#
my $group_id = 9999;
my $line = `ssh root\@$odroid_ip 'grep $service $LXC_PATH/etc/group'`;
if ($line =~ /$service:x:(\d+)/) {
	$group_id = $1;
}

#
# ssh to the remote system and place the new token
#
my $line = `ssh root\@$odroid_ip 'echo "$new_token" > $LXC_PATH/home/tokens/$service; chown root.$group_id $LXC_PATH/home/tokens/$service; chmod 640 $LXC_PATH/home/tokens/$service'`;
#print "$line";

syslog('info', "New token successfully placed for team $team_name service $service\n");

closelog();
exit(0);


sub VerifyKey() {
	# get the previous token from our local cache
	my $old_token;
	if (open(IN, "<$team_name.$service")) {
		$old_token = <IN>;
		close IN;
	}
	# write the current token out to our local cache
	if (open(OUT, ">$team_name.$service")) {
		print OUT $new_token;
		close OUT;
	}

	my $line = `ssh root\@$odroid_ip 'ls -ln $LXC_PATH/home/tokens/$service; cat $LXC_PATH/home/tokens/$service'`;
	#print "line: $line\n";
	# expected output
	#-rwxr----- 1 0 1001 16 Jul 22 12:53 /mnt/lxc/lxclib/team/rootfs/home/bookworm/key
	#The key is: TBD
	my ($ls, $curr_token) = split /\n/, $line;
	if ($ls =~ /^([-rwx]+)\s\d\s(\d+)\s(\d+)/) {
		my $perms = $1;
		my $owner = $2;
		my $group = $3;
		# verify permissions are correct
		if ($perms ne "-rw-r-----") {
			syslog('info', "incorrect permissions for team $team_name service $service\n");
		}
		# verify ctf user is owner
		#if ($owner != 1002) { # ctf user
		if ($owner != 0) { # ctf user
			syslog('info', "incorrect owner for team $team_name service $service\n");
		}
		# verify group is set to the service's group
		if ($group != $group_id) {
			syslog('info', "incorrect group for team $team_name service $service\n");
		}
	} else {
		syslog('info', "token file is missing for team $team_name service $service\n");
	}
	if ($old_token ne "" && $curr_token ne $old_token) {
		syslog('info', "token has been overwritten for team $team_name service $service\n");
	}
}

