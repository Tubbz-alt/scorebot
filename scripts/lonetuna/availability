#!/usr/bin/env python
import sys
import socket
import struct
import os
import random
import signal

def randstr( leng=6 ):
        x = ''
        for i in range(0, leng):
                x += struct.pack('B', random.randint( 0x41, 0x5b ))
        return x

def makefont( ):
	numglyphs = random.randint(0x10, 0x5e)
	print 'Num glyphs: %d' % numglyphs
	font = struct.pack('B', numglyphs&0xff)
	font += '\x69\x69\x69'
	for i in range(0, numglyphs):
		for x in range(0, 21):
			font += struct.pack('B', x)
	font += '\x96\x96\x96'
	for i in range(0, 0x5e):
		font += struct.pack('B', random.randint(0, numglyphs-1))
	print len(font)
	print 'expexted: %d' % (7+(numglyphs*21)+0x5e)

	return font	

if __name__== '__main__':
  signal.alarm( 10 )
  s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
  try:
    s.connect((sys.argv[1], 4321))
  except socket.error, (value,message):
    sys.exit(1)

  data = s.recv(1024)
  while data.startswith('Connect') == False:
    data = s.recv(1024)

  sfd = data[11:data.find(' to view')]
  s.recv(1024)
  port = int(sfd)

  try:
    c = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    c = c.connect( (sys.argv[1], port ) )
  except socket.error, (value,message):
    sys.exit(1)

  numfonts = random.randint( 1, 4 )
  for i in range(0, numfonts):
    s.send('2\n')
    font = makefont()
    s.send(struct.pack('I', len(font)))
    s.send(font)
    s.recv(1024)
    s.send('1\n')
    s.send(randstr(5) + '\n')
    s.recv(1024)

  s.send('3\n')
  y = s.recv(1024)
  if y.startswith('Thank you') == False:
    sys.exit(1)
  s.close()
